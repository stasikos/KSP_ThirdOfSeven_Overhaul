CONTRACT_TYPE
{
	name = WCROWeather
	group = WCROHomeClimate
	title = Measure temperatures over @targetBody surface
	description = You have to give that data to us. No matter how.
	synopsis = Visit designated places at @targetBody and measure temperature and pressure.
	completedMessage = Great work. We are sure you need to recalibrate your instruments since it doesn't match our predictions.
	maxSimultaneous = 4
	agent = World Climate Research Organisation
	targetBody = @targetBody1
	rewardFunds = Random(5000.0,15000.0)
	rewardReputation = Random(1.0, 2.0)

	DATA 
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		hidden = true
		targetBody1 = HomeWorld()
	}

	DATA
	{
		type = string
		hiddent = true
		homeDesc = We need to check if our theory about weather changes on @targetBody, so your task is to check real data in different points so we can match them and correct our model.
	}

	DATA
	{
		type = List<ScienceExperiment>
		experiments = [temperatureScan, barometerScan]
	}

	DATA 
	{
		type = Biome
		hidden = true
		biome = @/WaypointGenerator.Waypoints().First().Location().Biome()
	}
	
	DATA
	{
		type = ScienceRecoveryMethod
		hidden = true
		recoveryMethod = RecoverOrTransmit
	}

	DATA 
	{
		type = List<ScienceSubject>
		hidden = true
		scienceSubjectsTemp1 = AllScienceSubjectsByBiome([@biome])
		scienceSubjects = @scienceSubjectsTemp1.Where(s => s.Experiment() == temperatureScan || s.Experiment() == barometerScan)
	}


	PARAMETER {
		name = VPG
		type = VesselParameterGroup
		title = Reach waypoint (no matter how) and measure temperature and pressure.

		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			hideOnCompletion = false
			showMessages = true
		}	


		PARAMETER
		{
		        type = CollectScience
			name = CollectScience
			title = Measure temperature and pressure at the waypoint
		        situation = SrfLanded
        		experiment = @scienceSubject.Experiment()
		        recoveryMethod = None

	        	rewardFunds = Random(1500.0, 1600.0)
	
		        ITERATOR
		        {
        		    type = ScienceSubject
	        	    scienceSubject = @/scienceSubjects
	        	}
		}
	}


	REQUIREMENT {
		type = TechResearched
		part = sensorBarometer
		part = sensorThermometer
	}

	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator
		RANDOM_WAYPOINT
		{
			icon = thermometer
			altitude = 0.0
			waterAllowed = true
			count = 5
		}
	}
}
